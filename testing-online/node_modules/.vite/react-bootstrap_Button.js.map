{
  "version": 3,
  "sources": ["../react-bootstrap/esm/Button.js", "../@restart/ui/esm/Button.js", "dep:react-bootstrap_Button"],
  "sourcesContent": ["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;", "const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href: tagName === 'a' && disabled ? undefined : href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;", "import d from \"./node_modules/react-bootstrap/esm/Button.js\";export default d;"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA,wBAAuB;AACvB,aAAuB;;;ACGvB,YAAuB;AACvB,yBAA4B;AAL5B,IAAM,YAAY,CAAC,MAAM;AAEzB,uCAAuC,QAAQ,UAAU;AAAE,MAAI,UAAU;AAAM,WAAO;AAAI,MAAI,SAAS;AAAI,MAAI,aAAa,OAAO,KAAK;AAAS,MAAI,KAAK;AAAG,OAAK,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAAE,UAAM,WAAW;AAAI,QAAI,SAAS,QAAQ,QAAQ;AAAG;AAAU,WAAO,OAAO,OAAO;AAAA;AAAQ,SAAO;AAAA;AAInS,uBAAuB,MAAM;AAClC,SAAO,CAAC,QAAQ,KAAK,WAAW;AAAA;AAE3B,wBAAwB;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW;AAAA,EACX;AAAA,GACC;AACD,MAAI,CAAC,SAAS;AACZ,QAAI,QAAQ,QAAQ,UAAU,QAAQ,OAAO,MAAM;AACjD,gBAAU;AAAA,WACL;AACL,gBAAU;AAAA;AAAA;AAId,QAAM,OAAO;AAAA,IACX;AAAA;AAGF,MAAI,YAAY,UAAU;AACxB,WAAO,CAAC;AAAA,MACN,MAAM,QAAQ;AAAA,MACd;AAAA,OACC;AAAA;AAGL,QAAM,cAAc,WAAS;AAC3B,QAAI,YAAY,YAAY,OAAO,cAAc,OAAO;AACtD,YAAM;AAAA;AAGR,QAAI,UAAU;AACZ,YAAM;AACN;AAAA;AAGF,eAAW,OAAO,SAAS,QAAQ;AAAA;AAGrC,QAAM,gBAAgB,WAAS;AAC7B,QAAI,MAAM,QAAQ,KAAK;AACrB,YAAM;AACN,kBAAY;AAAA;AAAA;AAIhB,SAAO,CAAC;AAAA,IACN,MAAM;AAAA,IAGN,UAAU;AAAA,IACV,UAAU,WAAW,SAAY;AAAA,IACjC,MAAM,YAAY,OAAO,WAAW,SAAY;AAAA,IAChD,QAAQ,YAAY,MAAM,SAAS;AAAA,IACnC,iBAAiB,CAAC,WAAW,SAAY;AAAA,IACzC,KAAK,YAAY,MAAM,MAAM;AAAA,IAC7B,SAAS;AAAA,IACT,WAAW;AAAA,KACV;AAAA;AAEL,IAAM,SAAsB,AAAM,iBAAW,CAAC,MAAM,QAAQ;AAC1D,MAAI;AAAA,IACF,IAAI;AAAA,IACJ;AAAA,MACE,MACA,QAAQ,8BAA8B,MAAM;AAEhD,QAAM,CAAC,aAAa;AAAA,IAClB,SAAS;AAAA,OACN,eAAe,OAAO,OAAO;AAAA,IAChC,SAAS;AAAA,IACT;AAAA,KACC;AACH,SAAoB,4BAAK,WAAW,OAAO,OAAO,IAAI,OAAO,aAAa;AAAA,IACxE;AAAA;AAAA;AAGJ,OAAO,cAAc;;;ADrFrB,0BAA4B;AAC5B,IAAM,eAAe;AAAA,EACnB,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,UAAU;AAAA;AAEZ,IAAM,UAAsB,AAAM,kBAAW,CAAC,IAQ3C,QAAQ;AARmC,eAC5C;AAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,MAN4C,IAOzC,kBAPyC,IAOzC;AAAA,IANH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGA,QAAM,SAAS,mBAAmB,UAAU;AAC5C,QAAM,CAAC,aAAa;AAAA,IAClB;AAAA,OACG,eAAe;AAAA,IAClB,SAAS;AAAA,KACN;AAEL,QAAM,YAAY;AAClB,SAAoB,6BAAK,WAAW,gDAAK,QACpC,cAD+B;AAAA,IAElC;AAAA,IACA,WAAW,+BAAW,WAAW,QAAQ,UAAU,UAAU,WAAW,GAAG,UAAU,WAAW,QAAQ,GAAG,UAAU,QAAQ,MAAM,QAAQ,MAAM,YAAY;AAAA;AAAA;AAGjK,QAAO,cAAc;AACrB,QAAO,eAAe;AACtB,IAAO,iBAAQ;;;AEnC8C,IAAO,iCAAQ;",
  "names": []
}
